@page "/mealRecipe/{Index:int}"
@using Cookulon.Shared
@using System.Text.Json
@using System.Web

@inject HttpClient Http;
@inject NavigationManager Navigation;

<div class="container mt-5 h-100">

    <div class="d-flex flex-column flex-lg-row justify-content-start">
        <div class="text-center text-lg-start">
            <img class="rounded-3"/>
        </div>
        <div class="flex-grow-1 px-3">
            <h1 class="fw-bold">@title</h1>
            <p>Description Goes Here</p>
        </div>
    </div>
    <div class="row row-cols-1 row-cols-md-2">
        <div class="colandingPage mt-3">
            <h2>Ingredients</h2>
        </div>
        <div class="col">
            <h2>Instructions</h2>
        </div>
    </div>


</div>

@code {

    [CascadingParameter]
    private RecipeState? recipeState { get; set; }

    // Incoming Index of Meal Recipe from recipeIdeas
    [Parameter]
    public int Index { get; set; }

    private string title;
    private string recipeImageUrl = string.Empty;
    private Recipe recipe;

    protected override void OnInitialized()
    {
        GetRecipe();
    }


    private async void GetRecipe()
    {
        string baseuri = "Recipe/GetRecipe";

        try
        {
            title = recipeState.Ideas.FirstOrDefault(i => i.Index == Index).Title;

            RecipeParms recipeParms = new RecipeParms()
                {
                    MealTime = recipeState.MealTime,
                    Ingredients = recipeState.Ingredients,
                    SelectedIdea = title
                };

            // get the recipe image
            HttpResponseMessage responseImage = await Http.GetAsync($"Recipe/GetRecipeImage?title={HttpUtility.UrlEncode(title)}");
            var recipeImage = await responseImage.Content.ReadFromJsonAsync<RecipeImage>();
            recipeImageUrl = recipeImage!.Data[0].Url;


            // get the recipe
            HttpResponseMessage responseRecipe = await Http.PostAsJsonAsync(baseuri, recipeParms);

            responseRecipe.EnsureSuccessStatusCode();

            recipe = await responseRecipe.Content.ReadFromJsonAsync<Recipe>();

            StateHasChanged();
        }
        catch
        {
            Console.WriteLine("+_+_+_+_+_+_+_+_ Error: Could not generate Recipe. +_+_+_+_+_+_+_+_+_");
        }
    }

}
